name: Vendor RouterOS 7.x Internals Workflow
on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  BRANCH_HOST: 'download.mikrotik.com'
  BRANCH_PREFIX: 'vendor'
  BRANCH_VERSION: ${{ secrets.VENDOR_BRANCH_VERSION }}

jobs:
  Obtain_Internals:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        channel: [ stable ]
        #channel: [ stable, testing ]
    env:
      TZ: 'Europe/London'
    steps:
      - name: Install requirements
        run: |
          echo $(uname -a)
          #sudo apt-get update > /dev/null
          #sudo apt-get install -y dosfstools extlinux mkisofs rsync qemu-utils xorriso zip zstd > /dev/null
          #sudo modprobe nbd > /dev/null

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Get the latest version
        run: |
          if [[ -z "${{ env.BRANCH_VERSION }}" ]]; then
            BRANCH_VERSION_URL="https://${{ env.BRANCH_HOST }}/routeros/NEWESTa7.${{ matrix.channel }}"
            echo "BRANCH_VERSION_URL=${BRANCH_VERSION_URL}"
            BRANCH_VERSION=$(wget -nv -O - ${BRANCH_VERSION_URL} | cut -d ' ' -f1)
            echo "BRANCH_VERSION=${BRANCH_VERSION}"
          fi
          echo "BRANCH_VERSION=${BRANCH_VERSION}" >> $GITHUB_ENV

      - name: Prepare an empty branch
        run: |
          BRANCH_NAME="${{ env.BRANCH_PREFIX }}-${{ matrix.channel }}-${{ env.BRANCH_VERSION }}"
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          git switch --orphan ${BRANCH_NAME}

      - name: Get a changelog
        run: |
          BRANCH_CHANGELOG_URL="https://${{ env.BRANCH_HOST }}/routeros/${BRANCH_VERSION}/CHANGELOG"
          echo "BRANCH_CHANGELOG_URL=${BRANCH_CHANGELOG_URL}"
          wget -nv -O changelog.txt ${BRANCH_CHANGELOG_URL}

      - name: Create directories
        run: |
          ARHCS=(arm64 x86)
          for ARCH in ${ARHCS[@]}; do
            mkdir -p ${ARCH}/img/{packed,unpacked}
            mkdir -p ${ARCH}/iso/{packed,unpacked}
            mkdir -p ${ARCH}/npk/{packed,unpacked}
          done

      - name: Download files
        run: |
          ARHCS=(arm64 x86)
          PACKAGES=(routeros calea container dude extra-nic gps iot iot-bt-extra lora rose-storage switch-marvell tr069-client ups user-manager wifi-qcom wireless zerotier)
          for ARCH in ${ARHCS[@]}; do
            if [ "${ARCH}" == 'x86' ]; then
              SUFFIX=''
            else
              SUFFIX="-${ARCH}"
            fi
            IMG_FILE="${ARCH}/img/packed/chr.img.zip"
            IMG_URL="https://${{ env.BRANCH_HOST }}/routeros/${BRANCH_VERSION}/chr-${BRANCH_VERSION}${SUFFIX}.img.zip"
            wget -nv -O ${IMG_FILE} ${IMG_URL} || true
            ISO_FILE="${ARCH}/iso/packed/mikrotik.iso"
            ISO_URL="https://${{ env.BRANCH_HOST }}/routeros/${BRANCH_VERSION}/mikrotik-${BRANCH_VERSION}${SUFFIX}.iso"
            wget -nv -O ${ISO_FILE} ${ISO_URL} || true
            for PACKAGE in ${PACKAGES[@]}; do
              FILE="${ARCH}/npk/packed/${PACKAGE}.npk"
              URL="https://${{ env.BRANCH_HOST }}/routeros/${BRANCH_VERSION}/${PACKAGE}-${BRANCH_VERSION}${SUFFIX}.npk"
              wget -nv -O ${FILE} ${URL} || true
            done
          done

      - name: Unpack ISO files
        run: |
          mkdir -p /tmp/iso
          ARHCS=(arm64 x86)
          for ARCH in ${ARHCS[@]}; do
            ISO_FILES=$(find "${ARCH}/iso/packed/*.iso")
            for ISO_FILE in ${ISO_FILES}; do
              sudo mount -o loop,ro ${ISO_FILE} /tmp/iso
              mkdir -p "${ARCH}/iso/unpacked/$(basename ${ISO_FILE})"
              rsync -a /tmp/iso/ "${ARCH}/iso/unpacked/$(basename ${ISO_FILE})/"
              sudo umount /tmp/iso
            done
          done

      - name: Add files, commit and push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ env.BRANCH_NAME }}
          create_branch: true
          push_options: '--force'

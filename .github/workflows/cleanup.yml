name: 'Repository Cleanup Workflow'
run-name: "Repository Cleanup: [${{ inputs.scope }}]"
on:
#  push:
#    branches:
#      - main
  workflow_dispatch:
    inputs:
      scope:
        description: 'Scope (e.g., runs)'
        required: true
        default: 'runs'
        type: choice
        options:
          - 'all'
          - 'branches'
          - 'releases'
          - 'runs'
          - 'tags'

permissions:
  actions: write
  contents: write

jobs:
  cleanup_runs:
    if: inputs.scope == 'all' || inputs.scope == 'runs'
    runs-on: ubuntu-24.04
    steps:
      - name: Get a list of workflow runs mentioned in releases
        id: runs_releases
        run: |
          URL="/repos/${{ github.repository }}/releases?per_page=100"
          {
            echo 'list<<EOF'
            gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "${URL}" --paginate \
              --jq ".[].body | capture(\"/${{ github.repository }}/actions/runs/(?<id>.*?)/\") | .id" || true
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Retrieve a list of workflow runs
        id: list_runs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          #URL="/repos/${{ github.repository }}/releases?per_page=100"
          #RUNS_IN_RELEASES="$(gh api \
          #  -H "Accept: application/vnd.github+json" \
          #  -H "X-GitHub-Api-Version: 2022-11-28" \
          #  "${URL}" --paginate \
          #  --jq ".[].body | capture(\"https://github.com/${{ github.repository }}/actions/runs/(?<id>.*?)/\") | .id")"
          RUNS_IN_RELEASES="${{ steps.runs_releases.outputs.list }}"
          
          URL="/repos/${{ github.repository }}/actions/runs?per_page=100&created=<$(date +%Y-%m-%d -d "7 days ago")"
          RUNS="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${URL}" --paginate \
            --jq '.workflow_runs[].id')"
          for RUN in ${RUNS[@]}; do
            [ -n "$(echo "${RUNS_IN_RELEASES}" | grep "${RUN}")" ] && continue
            echo "run ${RUN}"
          done

      - name: Compose a job summary
        id: compose_summary
        run: |
          {
            echo "### Outputs"
            echo "- runs in releases: \`${{ steps.runs_releases.outputs.list }}\`"
          } >> $GITHUB_STEP_SUMMARY

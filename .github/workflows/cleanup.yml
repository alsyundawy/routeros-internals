name: 'Repository Cleanup Workflow'
run-name: "Repository Cleanup: [${{ inputs.scope }}]"
on:
#  push:
#    branches:
#      - main
  workflow_dispatch:
    inputs:
      scope:
        default: 'runs'
        description: 'Scope (e.g., runs)'
        options:
          - 'all'
          - 'branches'
          - 'releases'
          - 'runs'
          - 'tags'
        required: true
        type: choice
      date:
        default: '7 days ago'
        description: 'Keep created on or newer (e.g., now)'
        required: true
        type: string
      simulate:
        default: false
        description: 'Simulate (skip deletion requests)'
        required: false
        type: boolean

permissions:
  actions: write
  contents: write

jobs:
  cleanup_runs:
    if: inputs.scope == 'all' || inputs.scope == 'runs'
    runs-on: ubuntu-24.04
    steps:
      - name: Compose a list of workflow runs mentioned in branches
        id: runs_branches
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          URL="/repos/${{ github.repository }}/branches?per_page=100"
          COMMITS="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${URL}" --paginate \
            --jq '.[] | if .name != "main" then .commit.sha else empty end' || true)"
          {
            echo 'list<<EOF'
            {
              for COMMIT in ${COMMITS[@]}; do
                URL="/repos/${{ github.repository }}/commits/${COMMIT}"
                RUN="$(gh api \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  "${URL}" \
                  --jq ".commit.message | capture(\"/${{ github.repository }}/actions/runs/(?<id>.*?)/\") | .id" || true)"
                if [ -n "${RUN}" ]; then
                  echo "${RUN}"
                fi
              done
            } | sort -u
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Compose a list of workflow runs mentioned in releases
        id: runs_releases
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          URL="/repos/${{ github.repository }}/releases?per_page=100"
          {
            echo 'list<<EOF'
            {
              gh api \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                "${URL}" --paginate \
                --jq ".[].body | capture(\"/${{ github.repository }}/actions/runs/(?<id>.*?)/\") | .id" || true
            } | sort -u
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Compose a list of stale workflow runs not mentioned in branches or releases
        id: runs_stale
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          URL="/repos/${{ github.repository }}/actions/runs?per_page=100"
          DATE="$(date +%Y-%m-%d -d "${{ inputs.date }}" || date +%Y-%m-%d -d "90 days ago")"
          RUNS="$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "${URL}&created=<${DATE}" --paginate \
            --jq '.workflow_runs[].id' || true)"
          RUNS_IN_BRANCHES="${{ steps.runs_branches.outputs.list }}"
          RUNS_IN_RELEASES="${{ steps.runs_releases.outputs.list }}"
          {
            echo 'list<<EOF'
            for RUN in ${RUNS[@]}; do
              [ -n "$(echo "${RUNS_IN_BRANCHES}" | grep "${RUN}")" ] && continue
              [ -n "$(echo "${RUNS_IN_RELEASES}" | grep "${RUN}")" ] && continue
              echo "${RUN}"
            done
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Delete stale workflow runs
        id: delete_runs
        if: ${{ !inputs.simulate }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          URL="/repos/${{ github.repository }}/actions/runs/"
          RUNS="${{ steps.runs_stale.outputs.list }}"
          for RUN in ${RUNS[@]}; do
            gh api \
              --method DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "${URL}${RUN}" || true
          done

      - name: Compose a job summary
        id: compose_summary
        run: |
          {
            echo "### Outputs"
            echo -e "- Runs in branches:\n\`\`\`\n${{ steps.runs_branches.outputs.list }}\n\`\`\`"
            echo -e "- Runs in releases:\n\`\`\`\n${{ steps.runs_releases.outputs.list }}\n\`\`\`"
            echo -e "- Runs to delete:\n\`\`\`\n${{ steps.runs_stale.outputs.list }}\n\`\`\`"
          } >> $GITHUB_STEP_SUMMARY
